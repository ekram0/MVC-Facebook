@page
@model RegisterModel
@using Microsoft.AspNetCore.Identity
@using MVC_Facebook.Models
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h4>Create a new account.</h4>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password"></label>
                <input asp-for="Input.Password" class="form-control" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword"></label>
                <input asp-for="Input.ConfirmPassword" class="form-control" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.FirstName"></label>
                <input asp-for="Input.FirstName" class="form-control" />
                <span asp-validation-for="Input.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.LastName"></label>
                <input asp-for="Input.LastName" class="form-control" />
                <span asp-validation-for="Input.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BirthDate"></label>
                <input asp-for="BirthDate" class="form-control" />
                <span asp-validation-for="BirthDate" class="text-danger"></span>
            </div>
            @if (SignInManager.IsSignedIn(User))
            {
                if ( (bool)await UserManager.IsInRoleAsync((User)ViewData["test"], "Admin"))//&& UserManager.GetUserId(User).FirstOrDefault() =="Admin")
                {
                    //var userId = UserManager.GetUserId(User);
                    //var roleName = UserManager.GetRolesAsync(User)
                <div class="form-group">
                    @*<p> @RoleManager.GetRoleNameAsync</p>*@
                    <label asp-for="Input.RoleName" class="control-label"></label>
                    <select asp-for="Input.RoleName" class="form-control" asp-items="new SelectList(Model.RolesName)"></select>
                </div>
                }
            }
            <div class="form-group">
                <label asp-for="Input.Gender"></label>
                @*<input asp-for="Input.Gender" class="form-control" />*@
                @foreach (var value in Enum.GetValues(typeof(MVC_Facebook.Models.Gender)))
                {
                    @Html.RadioButtonFor(m => m.Input.Gender, value)
                    @Html.Label(value.ToString())
                }
                <span asp-validation-for="Input.Gender" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
