

@inject UserManager<User> UserManager


@model IEnumerable<Post>
@*<p>
        <a asp-action="Create">Create New</a>
    </p>*@
@if (User.IsInRole("Normal User"))
{

    @if (Model == null)
    {
        <span>No Posts. Add some friends!</span>
    }
    else
    {

        <div id="renderModal"></div>
        var i = 0;
        @foreach (var item in Model)
        {
            if (item.IsDeleted == false)
            {
                <div class=" p-3 mb-3 bg-white rounded border">
                    @*<input type="hidden" id="pID" value="@item.ID">*@
                    <div class="row">
                        <div class="col-1">
                            <img src="~/images/@item.PostOwner.Picture" width="50" height="50" />
                        </div>
                        <div class="pt-1 col-9">
                            @Html.ActionLink($"{item.PostOwner.FullName}", "Index", "Profile", routeValues: new { id = item.PostOwnerID }, new { @class = "h6" })
                            <div class="col-12 disabled font-italic small p-0 text-secondary">
                                @item.TimeStamp.ToUniversalTime()
                            </div>
                        </div>
                        @{
                            if (item.PostOwnerID == @UserManager.GetUserId(User))
                            {
                                <div class="col-2">
                                    <button class="btn btn-primary col-12" onclick="deletePost(this,'@item.ID')">Delete</button>
                                    @*@Html.ActionLink("Delete", "Delete", "Posts", new { id = item.ID }, new { @class = "btn btn-link" })*@
                                </div>
                            }
                        }
                    </div>
                    <div class="row">
                        <div class="p-3 text-dark">
                            @item.Body
                        </div>
                    </div>

                    <div class="border rounded-top">
                        <div class="row">
                            <div class="col-6 pr-0">
                                @{
                                    var likeExists = item.Likes.Any(l => l.LikeOwnerID == @UserManager.GetUserId(User) && l.IsDeleted == false);
                                    if (likeExists)
                                    {
                                        <button class="btn btn-block m-0 likeBtn" style="color:blue;" onclick="ToggleLike(this,'numLikes_@i')" data-mytoggle="true" data-isDeleted="false" data-likeOwnerID="@UserManager.GetUserId(User)" data-postID="@item.ID">

                                            <i class="fas fa-thumbs-down"></i> &nbsp;Unlike
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-block m-0 likeBtn" onclick="ToggleLike(this,'numLikes_@i')" data-mytoggle="false" data-isDeleted="" data-likeOwnerID="@UserManager.GetUserId(User)" data-postID="@item.ID">

                                            <i class="fas fa-thumbs-up"></i> &nbsp;Like
                                        </button>
                                    }
                                }

                            </div>
                            <div class="col-6 pl-0">
                                <button class="@item.ID btn btn-block m-0 rounded-0 border-left" onclick="showComments(@item.ID)"><i class="fas fa-comment-alt"></i> &nbsp;Comment</button>
                            </div>
                        </div>
                    </div>
                    <div class="border border-top-0 border-bottom-0">
                        <div class="row">
                            <div class="col-12">

                                @*@if (item.Likes.Count(l => l.IsDeleted == false) != 0)
                                    {*@
                                <a id="numLikes_@i" class="p-1 pl-3 d-block border-bottom" onclick="ShowModal(@item.ID,this)" href="javascript:void">@item.Likes.Count(l => l.IsDeleted == false) </a>
                                @*}
                                    else
                                    {
                                        <a id="numLikes_@i" class="p-3 d-block bg-light" visible="hide" onclick="ShowModal(@item.ID)" href="javascript:void">@item.Likes.Count(l => l.IsDeleted == false) </a>
                                    }*@


                            </div>
                        </div>
                    </div>

                    <div id="commentPost_@(item.ID)">
                    </div>

                   

                    <div class="row">
                        <div class="col-12">
                            <div class="form-group mb-0 p-3 rounded-bottom border border-top-0">
                                <textarea id="commentbox_@(item.ID)" name="Body" class="form-control border-left border-top" placeholder="Comment.." style="min-height:90px; max-height:90px;" />
                                <input type="submit" value="Comment" class="commentBtn btn btn-primary btn-block mt-3 col-12" onclick="addComment(@item.ID)" />
                            </div>
                        </div>
                        @*<form method="post" asp-action="AddComment" asp-controller="Comments">
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>


                                <input type="hidden" value="@item.ID" name="PostID" />

                                <div class="form-group bg-light p-2">

                                    <textarea name="Body" class="form-control" placeholder="Comment.." style="min-height:90px; max-height:90px;"></textarea>
                                    <input type="submit" value="Comment" class="commentBtn btn btn-light btn-block mt-2" />
                                </div>
                                <div class="form-group bg-light">
                                </div>
                            </form>*@
                    </div>
                    @*<div class="col-12">
                           <textarea id="item_@(item.ID)" name="Body" class="form-control" placeholder="Comment.." style="min-height:90px; max-height:90px;"></textarea>
                           <button id="@item.ID" class="btn btn-block bg-light m-0" onclick="AddTextBox(@item.ID)">Comment</button>
                        </div>*@
                </div>
                i++;
            }
        }
    }

}

@*
    <script>
        function AddTextBox(val) {
            //console.log(val)
            //console.log( $.trim($("#commentP").val()))
            //console.log($("#BodyComment"+val))
            //console.log("hahahaa")
            console.log("#item_"+val)
            valBody=$.trim($("#item_"+val).val())
            //var lol = $("textarea[name='Body']")
            //console.log(valBody)
             $.ajax({
                    url: '@Url.Action("addComment","Comments")',
                 dataType: "json",
                 data: { PostID: val, Body: valBody },
                 success: function (data) {
                     alert("okeh")
                    },
                    error: function (xhr, status, error) {
                        alert("Erroooooooooooor");
                    }
                });
        }
    </script>*@


